{"version":3,"sources":["consts/dataUrl.ts","consts/IconType.ts","components/icons/GitHubIcon.tsx","components/tooltip/Tooltip.tsx","components/icons/SocialIcon.tsx","components/icons/LinkedInIcon.tsx","components/icons/TwitterIcon.tsx","components/icons/MediumIcon.tsx","components/icons/CodesandboxIcon.tsx","components/icons/SocialIcons.tsx","components/loader/Loader.tsx","components/home/Home.tsx","data/useFetch.ts","index.tsx","App.tsx"],"names":["DataUrl","IconType","Tooltip","props","React","visible","setVisible","timeout","startShowing","window","setTimeout","stopShowing","clearTimeout","title","className","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","children","iconMap","GitHub","svgClassName","pathClassName","viewBox","xmlns","d","LinkedIn","role","Twitter","Medium","CodeSandbox","SocialIcon","Component","type","url","Icon","rest","target","rel","href","SocialIcons","icons","map","icon","key","Loader","Home","data","useState","setData","useEffect","fetch","then","response","json","useFetch","intro","tagLine","socialIcons","ReactDOM","render","document","getElementById"],"mappings":"iTAAYA,E,4DAAAA,K,oBAAAA,M,SCAAC,E,iBAAAA,K,gBAAAA,E,oBAAAA,E,kBAAAA,E,gBAAAA,E,2BAAAA,M,KCGL,I,gBCIMC,G,MAAiD,SAAAC,GAAU,IAAD,EACrCC,YAAwB,GADa,mBAC5DC,EAD4D,KACnDC,EADmD,KAG/DC,EAAyB,KAEvBC,EAAe,WACjBF,GAAW,GACXC,EAAUE,OAAOC,YAAW,WACxBC,MACD,MAGDA,EAAc,WACZJ,GACAE,OAAOG,aAAaL,GAExBD,GAAW,IAGPO,EAAUV,EAAVU,MAER,OACI,uBACIC,UAAU,UACVC,aAAcP,EACdQ,aAAcL,EACdM,aAAcT,EACdU,WAAYP,GAEXR,EAAMgB,SACP,wBAAML,UAAS,sBAAiBT,GAAW,YACtCQ,MC3BXO,G,MAEL,mBACInB,EAASoB,QFXgD,SAAAlB,GAAU,IAC5DmB,EAAgCnB,EAAhCmB,aAAcC,EAAkBpB,EAAlBoB,cACtB,OAEI,uBAAKT,UAAWQ,EAAcE,QAAQ,YAAYC,MAAM,8BACpD,wBAAMX,UAAWS,EAAeG,EAAE,ktBEK7C,cAEIzB,EAAS0B,UCZkD,SAAAxB,GAAU,IAC9DmB,EAAgCnB,EAAhCmB,aAAcC,EAAkBpB,EAAlBoB,cACtB,OAEI,uBAAKT,UAAWQ,EAAcM,KAAK,MAAMJ,QAAQ,YAAYC,MAAM,8BAC/D,wBAAMX,UAAWS,EAAeG,EAAE,4fDK7C,cAGIzB,EAAS4B,SEbiD,SAAA1B,GAAU,IAC7DmB,EAAgCnB,EAAhCmB,aAAcC,EAAkBpB,EAAlBoB,cACtB,OAEI,uBAAKT,UAAWQ,EAAcE,QAAQ,YAAYC,MAAM,8BACpD,wBAAMX,UAAWS,EAAeG,EAAE,2oBFK7C,cAIIzB,EAAS6B,QGdgD,SAAA3B,GAAU,IAC5DmB,EAAgCnB,EAAhCmB,aAAcC,EAAkBpB,EAAlBoB,cACtB,OAEI,uBAAKT,UAAWQ,EAAcE,QAAQ,YAAYC,MAAM,8BACpD,wBAAMX,UAAWS,EAAeG,EAAE,gYHK7C,cAKIzB,EAAS8B,aIfqD,SAAA5B,GAAU,IACjEmB,EAAgCnB,EAAhCmB,aAAcC,EAAkBpB,EAAlBoB,cACtB,OAEI,uBAAKT,UAAWQ,EAAcE,QAAQ,YAAYI,KAAK,MAAMH,MAAM,8BAC/D,wBAAMX,UAAWS,EAAeG,EAAE,2QJK7C,GAQYM,EAAuD,SAAA7B,GAAU,IDwB1E8B,ECvBQC,EAAc/B,EAAd+B,KAAMC,EAAQhC,EAARgC,IACRC,GDsBNH,ECtBmDb,EAAQc,GDwBpD,SAAC/B,GAAc,IACXU,EAAkBV,EAAlBU,MAAUwB,EADA,YACQlC,EADR,WAEjB,OACI,gBAAC,EAAD,CAASU,MAAOA,GACZ,gBAACoB,EAAcI,MC3B3B,OACI,qBACIvB,UAAU,mBACVwB,OAAO,SACPC,IAAI,sBACJC,KAAML,GAEN,gBAACC,EAAD,CACId,aAAa,aACbC,cAAc,iBACdV,MAAOqB,MK7BVO,G,MAAyD,SAAAtC,GAAU,IACpEuC,EAAUvC,EAAVuC,MACR,OACI,uBAAK5B,UAAU,eACV4B,EAAMC,KAAK,SAAAC,GAAS,IACTV,EAAcU,EAAdV,KAAMC,EAAQS,EAART,IACd,OACI,gBAAC,EAAD,CACID,KAAMA,EACNC,IAAKA,EACLU,IAAKX,U,MCVtB,IAYkCC,EAZ5BW,EAAkC,WAC3C,OACI,uBAAKhC,UAAU,oBACX,uBAAKA,UAAU,2BACf,uBAAKA,UAAU,2BACf,uBAAKA,UAAU,2BACf,uBAAKA,UAAU,2BACf,uBAAKA,UAAU,6BCadiC,GDR4BZ,ECQ0BnC,EAAQ+C,KDPhE,SAACd,GACJ,OAAO,WACH,IAAMe,EEjBX,SAAgCb,GAAe,IAAD,EACzBc,mBAAmB,MADM,mBAC1CD,EAD0C,KACpCE,EADoC,KAOjD,OALAC,qBAAU,WACNC,MAAMjB,GACDkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIL,EAAQK,QAC3B,CAACpB,IACGa,EFUcQ,CAAYrB,GACzB,OAAKa,EAGE,gBAACf,EAAce,GAFX,gBAAC,EAAD,UCb+B,SAAA7C,GAAU,IAExDsD,EAGAtD,EAHAsD,MACAC,EAEAvD,EAFAuD,QACAC,EACAxD,EADAwD,YAGJ,OACI,uBAAK7C,UAAU,kBACX,uBAAKA,UAAU,aAAa2C,GAC5B,uBAAK3C,UAAU,eAAe4C,GAC9B,gBAAC,EAAD,CAAahB,MAAOiB,Q,YEbhCC,IAASC,OAAO,mBCH4B,kBACxC,uBAAK/C,UAAU,OACX,4BACI,gBAAC,EAAD,UDAI,MAASgD,SAASC,eAAe,W","file":"static/js/main.696bbcc8.chunk.js","sourcesContent":["export enum DataUrl {\n    Home = \"./home.json\",\n}\n","export enum IconType {\n    GitHub = \"GitHub\",\n    LinkedIn = \"LinkedIn\",\n    Twitter = \"Twitter\",\n    Medium = \"Medium\",\n    CodeSandbox = \"CodeSandbox\",\n}\n","import * as React from \"react\";\nimport { IconProps } from \"../../types\";\n\nexport const GitHubIcon: React.FunctionComponent<IconProps> = props => {\n    const { svgClassName, pathClassName } = props;\n    return (\n        /* tslint:disable:max-line-length */\n        <svg className={svgClassName} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className={pathClassName} d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n        </svg>\n        /* tslint:enable:max-line-length */\n    );\n};\n","import * as React from \"react\";\nimport \"./Tooltip.css\";\n\nexport interface TooltipProps {\n    title: string;\n}\n\nexport const Tooltip: React.FunctionComponent<TooltipProps> = props => {\n    const [visible, setVisible] = React.useState<boolean>(false);\n\n    let timeout: number | null = null;\n\n    const startShowing = () => {\n        setVisible(true);\n        timeout = window.setTimeout(() => {\n            stopShowing();\n        }, 2000);\n    };\n\n    const stopShowing = () => {\n        if (timeout) {\n            window.clearTimeout(timeout);\n        }\n        setVisible(false);\n    };\n\n    const { title } = props;\n\n    return (\n        <div\n            className=\"tooltip\"\n            onMouseEnter={startShowing}\n            onMouseLeave={stopShowing}\n            onTouchStart={startShowing}\n            onTouchEnd={stopShowing}\n        >\n            {props.children}\n            <span className={`tooltipText ${visible && \"visible\"}`}>\n                {title}\n            </span>\n        </div>\n    );\n};\n\nexport const withTooltip = <A extends TooltipProps>(\n    Component: React.FunctionComponent<Pick<A, Exclude<keyof A, keyof TooltipProps>>>,\n): React.FunctionComponent<A> => {\n    return (props: A) => {\n        const {title, ...rest} = props;\n        return (\n            <Tooltip title={title}>\n                <Component {...rest} />\n            </Tooltip>\n        );\n    };\n};\n","import * as React from \"react\";\nimport { IconType } from \"../../consts/IconType\";\nimport { GitHubIcon } from \"./GitHubIcon\";\nimport { LinkedInIcon } from \"./LinkedInIcon\";\nimport { TwitterIcon } from \"./TwitterIcon\";\nimport { MediumIcon } from \"./MediumIcon\";\nimport { CodesandboxIcon } from \"./CodesandboxIcon\";\nimport { TooltipProps, withTooltip } from \"../tooltip/Tooltip\";\nimport { IconProps, SocialIconProps } from \"../../types\";\nimport \"./SocialIcon.css\";\n\nconst iconMap: {\n    [K in IconType]:  React.FunctionComponent<IconProps>\n} = {\n    [IconType.GitHub]: GitHubIcon,\n    [IconType.LinkedIn]: LinkedInIcon,\n    [IconType.Twitter]: TwitterIcon,\n    [IconType.Medium]: MediumIcon,\n    [IconType.CodeSandbox]: CodesandboxIcon,\n};\n\nexport const SocialIcon: React.FunctionComponent<SocialIconProps> = props => {\n    const { type, url } = props;\n    const Icon = withTooltip<IconProps & TooltipProps>(iconMap[type]!);\n    return (\n        <a\n            className=\"socialIconAnchor\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={url}\n        >\n            <Icon\n                svgClassName=\"socialIcon\"\n                pathClassName=\"socialIconPath\"\n                title={type}\n            />\n        </a>\n    );\n};\n","import * as React from \"react\";\nimport { IconProps } from \"../../types\";\n\nexport const LinkedInIcon: React.FunctionComponent<IconProps> = props => {\n    const { svgClassName, pathClassName } = props;\n    return (\n        /* tslint:disable:max-line-length */\n        <svg className={svgClassName} role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className={pathClassName} d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n        </svg>\n        /* tslint:enable:max-line-length */\n    );\n};\n","import * as React from \"react\";\nimport { IconProps } from \"../../types\";\n\nexport const TwitterIcon: React.FunctionComponent<IconProps> = props => {\n    const { svgClassName, pathClassName } = props;\n    return (\n        /* tslint:disable:max-line-length */\n        <svg className={svgClassName} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className={pathClassName} d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"/>\n        </svg>\n        /* tslint:enable:max-line-length */\n    );\n};\n","import * as React from \"react\";\nimport { IconProps } from \"../../types\";\n\nexport const MediumIcon: React.FunctionComponent<IconProps> = props => {\n    const { svgClassName, pathClassName } = props;\n    return (\n        /* tslint:disable:max-line-length */\n        <svg className={svgClassName} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className={pathClassName} d=\"M0 0v24h24V0H0zm19.938 5.686L18.651 6.92a.376.376 0 0 0-.143.362v9.067a.376.376 0 0 0 .143.361l1.257 1.234v.271h-6.322v-.27l1.302-1.265c.128-.128.128-.165.128-.36V8.99l-3.62 9.195h-.49L6.69 8.99v6.163a.85.85 0 0 0 .233.707l1.694 2.054v.271H3.815v-.27L5.51 15.86a.82.82 0 0 0 .218-.707V8.027a.624.624 0 0 0-.203-.527L4.019 5.686v-.27h4.674l3.613 7.923 3.176-7.924h4.456v.271z\"/>\n        </svg>\n        /* tslint:enable:max-line-length */\n    );\n};\n","import * as React from \"react\";\nimport { IconProps } from \"../../types\";\n\nexport const CodesandboxIcon: React.FunctionComponent<IconProps> = props => {\n    const { svgClassName, pathClassName } = props;\n    return (\n        /* tslint:disable:max-line-length */\n        <svg className={svgClassName} viewBox=\"0 0 24 24\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className={pathClassName} d=\"M2 6l10.455-6L22.91 6 23 17.95 12.455 24 2 18V6zm2.088 2.481v4.757l3.345 1.86v3.516l3.972 2.296v-8.272L4.088 8.481zm16.739 0l-7.317 4.157v8.272l3.972-2.296V15.1l3.345-1.861V8.48zM5.134 6.601l7.303 4.144 7.32-4.18-3.871-2.197-3.41 1.945-3.43-1.968L5.133 6.6z\"/>\n        </svg>\n        /* tslint:enable:max-line-length */\n    );\n};\n","import * as React from \"react\";\nimport { SocialIconsProps } from \"../../types\";\nimport { SocialIcon } from \"./SocialIcon\";\nimport \"./SocialIcons.css\";\n\nexport const SocialIcons: React.FunctionComponent<SocialIconsProps> = props => {\n    const { icons } = props;\n    return (\n        <div className=\"socialIcons\">\n            {icons.map((icon => {\n                const { type, url } = icon;\n                return (\n                    <SocialIcon\n                        type={type}\n                        url={url}\n                        key={type}\n                    />\n                );\n            }))}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport \"./Loader.css\";\nimport { useFetch } from \"../../data/useFetch\";\nimport { DataUrl } from \"../../consts/dataUrl\";\n\nexport const Loader: React.FunctionComponent = () => {\n    return (\n        <div className=\"loader appearing\">\n            <div className=\"loaderBall loaderBall1\" />\n            <div className=\"loaderBall loaderBall2\" />\n            <div className=\"loaderBall loaderBall3\" />\n            <div className=\"loaderBall loaderBall4\" />\n            <div className=\"loaderBall loaderBall5\" />\n        </div>\n    );\n};\n\nexport const withLoader = <P extends {}>(url: DataUrl) => {\n    return (Component: React.FunctionComponent<P>): React.FunctionComponent => {\n        return () => {\n            const data = useFetch<P>(url);\n            if (!data) {\n                return <Loader />;\n            }\n            return <Component {...data} />;\n        };\n    };\n};\n","import * as React from \"react\";\nimport \"./Home.css\";\nimport { DataUrl } from \"../../consts/dataUrl\";\nimport { HomeData } from \"../../types\";\nimport { SocialIcons } from \"../icons/SocialIcons\";\nimport { withLoader } from \"../loader/Loader\";\n\nexport type HomeProps = HomeData;\n\nconst Component: React.FunctionComponent<HomeProps> = props => {\n    const {\n        intro,\n        tagLine,\n        socialIcons,\n    } = props;\n\n    return (\n        <div className=\"home appearing\">\n            <div className=\"homeIntro\">{intro}</div>\n            <div className=\"homeTagLine\">{tagLine}</div>\n            <SocialIcons icons={socialIcons} />\n        </div>\n    );\n};\n\nexport const Home: React.FunctionComponent = withLoader<HomeProps>(DataUrl.Home)(Component);\n","import { useState, useEffect } from \"react\";\nimport { DataUrl } from \"../consts/dataUrl\";\n\nexport function useFetch<D extends {}>(url: DataUrl) {\n    const [data, setData] = useState<D | null>(null);\n    useEffect(() => {\n        fetch(url)\n            .then(response => response.json())\n            .then(json => setData(json));\n    }, [url]);\n    return data;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nimport \"./fallbacks\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import * as React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./components/home/Home\";\n\nexport const App: React.FunctionComponent = () => (\n    <div className=\"App\">\n        <main>\n            <Home />\n        </main>\n    </div>\n);\n"],"sourceRoot":""}